.radar-axis {
  .domain, line {
    stroke: #E9E9E9;
  }
  text {
    fill: #ccc;
  }
}

// Radar shape
@mixin colorTcRadarchartShapeByAttr($attr, $value, $color) {
  .radar-shape[#{$attr}="#{$value}"] {
    stroke: $color;
  }
}

@mixin colorTcRadarchartShapeById($id, $color) {
  @include colorTcRadarchartShapeByAttr(data-serie-index, $id, $color);
}

@mixin colorTcRadarchartShapeByName($name, $color) {
  @include colorTcRadarchartShapeByAttr(data-serie, $name, $color);
}

@each $color in $chartColors {
  $i: index($chartColors, $color) - 1;
  @include colorTcRadarchartShapeById($i, $color);
}

// Radar legend
@mixin colorTcRadarchartMetricsLabelsByAttr($attr, $value, $color) {
  .radar-legend__content div[#{$attr}="#{$value}"] {
    color: $color;
  }
}

@mixin colorTcRadarchartMetricsLabelById($id, $color) {
  @include colorTcRadarchartMetricsLabelsByAttr(data-serie-index, $id, $color);
}

@mixin colorTcRadarchartShapeByName($name, $color) {
  @include colorTcRadarchartMetricsLabelsByAttr(data-serie, $name, $color);
}

@each $color in $chartColors {
  $i: index($chartColors, $color) - 1;
  @include colorTcRadarchartMetricsLabelById($i, $color);
}

// Color hue linear gradient for legend label
$quantity: 12;
$step: 50deg / $quantity;

@for $i from 0 through $quantity - 1 {
	.radar-legend:nth-child(#{$i + 1}) .radar-legend__label {
		background: adjust-hue(#BA5800, $step * $i);
	}
}
